{"version":3,"sources":["BarcodeScanDialog.js","Form.js","Label.js","CreateView.js","App.js","serviceWorker.js","index.js"],"names":["BarcodeScanDialog","props","handleCameraChange","bind","handleDetected","handleFinished","startDetection","state","inputDevices","camera","undefined","result","codeReader","BrowserBarcodeReader","videoRef","createRef","okRef","listVideoInputDevices","then","videoInputDevices","setState","catch","err","console","error","this","decodeOnceFromVideoDevice","current","text","log","event","target","value","onResult","Dialog","onEntered","DialogTitle","id","DialogContent","Grid","container","spacing","item","xs","TextField","variant","label","fullWidth","disabled","select","onChange","map","device","MenuItem","key","deviceId","ref","width","height","style","border","DialogActions","Button","onClick","color","onClose","React","Component","Form","scanDialogOpen","handleNameChange","handleNricChange","handleGenderChange","handleDOBChange","handleNationalityChange","handleScanDialogOpen","handleScanDialogClose","handleScanResult","name","nric","gender","date","dob","nationality","Fragment","sm","InputProps","endAdornment","InputAdornment","position","IconButton","utils","DateFnsUtils","disableFuture","clearable","format","open","QRCode","require","dateFns","DateFnsAdapter","Label","generate","info","lines","qr","addData","JSON","stringify","make","qrWidth","getModuleCount","canvas","canvasRef","ctx","getContext","save","font","Math","max","restore","translate","renderTo2dContext","i","length","fillText","overflow","float","CreateView","handleFormChange","handleGenerate","handlePrint","handleNewEntry","Date","now","onNewEntry","change","clearRect","render","img","toDataURL","a","window","document","write","onload","print","close","onPrint","classes","newEntry","Paper","className","paper","Typography","align","withStyles","theme","root","flexGrow","title","padding","margin","textAlign","palette","secondary","withTheme","App","handlePrintDone","CssBaseline","AppBar","Toolbar","path","startIcon","Container","maxWidth","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.af83d75b.chunk.js","sourcesContent":["import React, { createRef, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { BrowserBarcodeReader } from '@zxing/library/esm5';\r\n\r\n\r\nexport default class BarcodeScanDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCameraChange = this.handleCameraChange.bind(this);\r\n    this.handleDetected = this.handleDetected.bind(this);\r\n    this.handleFinished = this.handleFinished.bind(this);\r\n    this.startDetection = this.startDetection.bind(this);\r\n\r\n    this.state = {\r\n      inputDevices: [],\r\n      camera: undefined,\r\n      result: '',\r\n    };\r\n  \r\n    this.codeReader = new BrowserBarcodeReader();\r\n    this.videoRef = createRef();\r\n    this.okRef = createRef();\r\n\r\n    this.codeReader.listVideoInputDevices()\r\n    .then(videoInputDevices => {\r\n      this.setState({\r\n        inputDevices: videoInputDevices,\r\n      });\r\n    })\r\n    .catch(err => console.error(err));\r\n  }\r\n\r\n  startDetection() {\r\n    this.codeReader.decodeOnceFromVideoDevice(this.state.camera, this.videoRef.current).then((result) => {\r\n      this.setState({result: result.text});\r\n    }).catch((err) => {\r\n      console.log(\"Detection error\", err);\r\n    });\r\n    console.log(`Started continous decode from camera ${this.state.camera}`);\r\n  }\r\n\r\n  handleCameraChange(event) {\r\n    this.setState({camera: event.target.value}, this.startDetection);\r\n  }\r\n\r\n  handleDetected(result) {\r\n    this.setState({result: result.text});\r\n  }\r\n\r\n  handleFinished() {\r\n    this.props.onResult(this.state.result);\r\n    this.setState({result: ''});\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <Dialog\r\n      onEntered={this.startDetection}\r\n      {...this.props}\r\n    >\r\n      <DialogTitle id=\"responsive-dialog-title\">{\"Scan NRIC/FIN Barcode\"}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"standard\" \r\n                  label=\"Result\"\r\n                  fullWidth\r\n                  value={this.state.result}\r\n                  disabled=\"true\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                id=\"input-camera\" \r\n                label=\"Select Camera\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                value={this.state.camera}\r\n                onChange={this.handleCameraChange}\r\n              >\r\n                {\r\n                  this.state.inputDevices.map((device) => <MenuItem key={device.label} value={device.deviceId}>{device.label}</MenuItem>)\r\n                }\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <video ref={this.videoRef} width=\"100%\" height=\"100%\" style={{border:(this.state.result==='')?\"solid 1px gray\":\"solid 3px #00E676\"}}></video>\r\n            </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"contained\" ref={this.okRef} disabled={this.state.result === ''} onClick={this.handleFinished} color=\"primary\">\r\n          OK\r\n        </Button>\r\n        <Button onClick={this.props.onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )}\r\n}","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport BarcodeScanDialog from './BarcodeScanDialog';\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      scanDialogOpen: false,\r\n    };\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNricChange = this.handleNricChange.bind(this);\r\n    this.handleGenderChange = this.handleGenderChange.bind(this);\r\n    this.handleDOBChange = this.handleDOBChange.bind(this);\r\n    this.handleNationalityChange = this.handleNationalityChange.bind(this);\r\n    this.handleScanDialogOpen = this.handleScanDialogOpen.bind(this);\r\n    this.handleScanDialogClose = this.handleScanDialogClose.bind(this);\r\n    this.handleScanResult = this.handleScanResult.bind(this);\r\n  }\r\n\r\n  // Change Handlers\r\n\r\n  handleNameChange(event) {\r\n    this.props.onChange({name: event.target.value});\r\n  }\r\n\r\n  handleNricChange(event) {\r\n    this.props.onChange({nric: event.target.value});\r\n  }\r\n\r\n  handleGenderChange(event) {\r\n    this.props.onChange({gender: event.target.value});\r\n  }\r\n  \r\n  handleDOBChange(date) {\r\n    this.props.onChange({dob: date});\r\n  }\r\n\r\n  handleNationalityChange(event) {\r\n    this.props.onChange({nationality: event.target.value});\r\n  }\r\n\r\n  handleScanDialogOpen(){\r\n    this.setState({scanDialogOpen: true});\r\n  }\r\n\r\n  handleScanDialogClose() {\r\n    this.setState({scanDialogOpen: false});\r\n  }\r\n\r\n  handleScanResult(result) {\r\n    this.setState({scanDialogOpen: false});\r\n    this.props.onChange({nric: result});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField \r\n                id=\"input-name\" \r\n                label=\"Name\" \r\n                value={this.props.name}\r\n                variant=\"standard\" \r\n                fullWidth \r\n                onChange={this.handleNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField \r\n                id=\"input-nric\" \r\n                label=\"NRIC/FIN\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                value={this.props.nric}\r\n                onChange={this.handleNricChange}\r\n                InputProps={{\r\n                  endAdornment:(<InputAdornment position=\"end\"><IconButton onClick={this.handleScanDialogOpen}><PhotoCameraIcon /></IconButton></InputAdornment>),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  fullWidth\r\n                  disableFuture\r\n                  variant=\"inline\"\r\n                  label=\"Date of Birth\"\r\n                  clearable\r\n                  value={this.props.dob}\r\n                  onChange={date => this.handleDOBChange(date)}\r\n                  format=\"dd/MM/yyyy\"\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField \r\n                select\r\n                id=\"input-gender\" \r\n                label=\"Gender\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                value={this.props.gender}\r\n                onChange={this.handleGenderChange}\r\n              >\r\n                <MenuItem key=\"M\" value=\"M\">Male</MenuItem>\r\n                <MenuItem key=\"F\" value=\"F\">Female</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField \r\n                id=\"input-nationality\" \r\n                label=\"Nationality\"\r\n                variant=\"standard\"\r\n                value={this.props.nationality}\r\n                fullWidth\r\n                onChange={this.handleNationalityChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <BarcodeScanDialog open={this.state.scanDialogOpen} onClose={this.handleScanDialogClose} onResult={this.handleScanResult}/>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\nconst QRCode = require('qrcode-generator');\r\n\r\nconst dateFns = new DateFnsAdapter();\r\n\r\nclass Label extends React.Component {\r\n\r\n  render() {\r\n\r\n    if (this.props.generate) {\r\n      const info = {\r\n        name: this.props.name,\r\n        nric: this.props.nric,\r\n        dob: dateFns.format(this.props.dob, \"dd MMM yyyy\"),\r\n        gender: this.props.gender,\r\n        nationality: this.props.nationality,\r\n      };\r\n\r\n      const lines = [\r\n        \"Name: \" + info.name,\r\n        \"NRIC/FIN: \" + info.nric,\r\n        \"DOB: \" + info.dob,\r\n        \"Gender: \" + info.gender,\r\n        \"Nationality: \" + info.nationality\r\n      ];\r\n\r\n      const padding = 10;\r\n      const textSize = 20;\r\n      const textLineSpace = 15;\r\n      const qrScale = 3;\r\n      const qrSpace = 10;\r\n      const textBlockHeight = 5*textSize + 4*textLineSpace;\r\n      const qr = QRCode(0,'H');\r\n      qr.addData(JSON.stringify(info));\r\n      qr.make();\r\n      const qrWidth = qr.getModuleCount()*qrScale;\r\n\r\n      const canvas = this.props.canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.save();\r\n      ctx.font = \"bold \" + textSize + \"px Arial\";\r\n      canvas.height = Math.max(qrWidth, textBlockHeight) + 2*padding;\r\n      \r\n      //const textBlockWidth = Math.max(...lines.map(i => ctx.measureText(i).width));\r\n      //canvas.width = qrWidth + qrSpace + textBlockWidth + 2*padding;\r\n      canvas.width = 600;\r\n      ctx.restore();\r\n      \r\n\r\n      // QR Code\r\n      ctx.save();\r\n      ctx.translate(padding, (canvas.height-qrWidth)/2);\r\n      qr.renderTo2dContext(ctx, qrScale);\r\n      ctx.restore();\r\n\r\n      // Field labels\r\n      ctx.save();\r\n      ctx.translate(padding + qrWidth + qrSpace, (canvas.height-textBlockHeight+0.5*textSize)/2+padding);\r\n      ctx.font = \"bold \" + textSize + \"px Arial\";\r\n      for (var i=0; i<lines.length; i++) {\r\n        ctx.fillText(lines[i], 0, i*(textSize+textLineSpace));\r\n      }\r\n      ctx.restore();\r\n\r\n    }\r\n\r\n    const divStyle={\r\n      overflow: 'scroll',\r\n      width:'100%',\r\n      float: 'left',\r\n      position:'relative'\r\n    };\r\n\r\n    return (\r\n      <div style={divStyle}>\r\n        <canvas ref={this.props.canvasRef}\r\n                style={{border: \"dashed 1px black\"}}\r\n                id=\"labelCanvas\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Label","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nimport Form from './Form'\r\nimport Label from './Label';\r\n\r\nconst styles = theme => ({ root: {\r\n                  flexGrow: 1,\r\n                },\r\n                title: {\r\n                  flexGrow: 1,\r\n                },\r\n                container: {\r\n                  padding: theme.spacing(2),\r\n                },\r\n                paper: {\r\n                  margin: theme.spacing(2),\r\n                  padding: '20px',\r\n                  textAlign: 'center',\r\n                  color: theme.palette.text.secondary,\r\n                }\r\n});\r\n\r\nclass CreateView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFormChange = this.handleFormChange.bind(this);\r\n    this.handleGenerate = this.handleGenerate.bind(this);\r\n    this.handlePrint = this.handlePrint.bind(this);\r\n    this.handleNewEntry = this.handleNewEntry.bind(this);\r\n    this.canvasRef = React.createRef();\r\n  \r\n    this.state = {\r\n      generate: false,\r\n      name: '',\r\n      nric: '',\r\n      dob: Date.now(),\r\n      gender: 'M',\r\n      nationality: ''\r\n    };\r\n  }\r\n\r\n  handleNewEntry() {\r\n    this.setState({\r\n      generate: false,\r\n      name: '',\r\n      nric: '',\r\n      dob: Date.now(),\r\n      gender: 'M',\r\n      nationality: ''\r\n    });\r\n\r\n    this.props.onNewEntry();\r\n  }\r\n\r\n  handleFormChange(change) {\r\n    change.generate=false;\r\n    this.setState(change);\r\n  }\r\n\r\n  handleGenerate() {\r\n    const canvas = this.canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    this.setState({generate: true});\r\n    this.render();\r\n  }\r\n\r\n  handlePrint() {\r\n    console.log(\"Print called\");\r\n    const canvas = this.canvasRef.current;\r\n    const img = canvas.toDataURL(\"image/png\");\r\n    console.log(img);\r\n    var a = window.open('', 'Print', 'height=500, width=500'); \r\n    a.document.write('<img src=\"'+ img +'\"/>');\r\n    a.onload = ()=>a.print();\r\n    a.document.close();\r\n    this.props.onPrint();\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {classes} = this.props;\r\n\r\n    if (this.props.print) this.handlePrint();\r\n    if (this.props.newEntry) this.handleNewEntry();\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Personal Particulars\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Form classes={this.props} onChange={this.handleFormChange} {...this.state} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\" \r\n                onClick={this.handleGenerate}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Preview\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Label canvasRef={this.canvasRef} {...this.state}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </React.Fragment>\r\n  );}\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CreateView);\r\n","import React from 'react';\n\nimport {BrowserRouter as Router,\n        Switch,\n        Link,\n       Route} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PrintIcon from '@material-ui/icons/Print';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport CreateView from './CreateView';\nimport { formatDistanceStrictWithOptions } from 'date-fns/fp';\n\nconst styles = theme => ({ root: {\n                  flexGrow: 1,\n                },\n                title: {\n                  flexGrow: 1,\n                },\n                container: {\n                  padding: theme.spacing(2),\n                },\n                paper: {\n                  margin: theme.spacing(2),\n                  padding: '20px',\n                  textAlign: 'center',\n                  color: theme.palette.text.secondary,\n                }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePrint = this.handlePrint.bind(this);\n    this.handlePrintDone = this.handlePrintDone.bind(this);\n    this.handleNewEntry = this.handleNewEntry.bind(this);\n\n    this.state = {\n      print: false,\n      newEntry: false,\n    };\n  }\n\n  handlePrint() {\n    this.setState({print: true});\n  }\n\n  handlePrintDone() {\n    this.setState({print: false});\n  }\n\n  handleNewEntry() {\n    this.setState({newEntry: true})\n  }\n\n  render()\n  {\n    const {classes} = this.props;\n    \n    return (\n    <Router>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Swab Labeller\n          </Typography>\n            <Switch>\n            <Route path=\"/\">\n              <Button color=\"inherit\" startIcon={<AddCircleOutlineIcon />} onClick={this.handleNewEntry}>New</Button>\n              <Button color=\"inherit\" startIcon={<PrintIcon />} onClick={this.handlePrint}>Print</Button>\n            </Route>\n          </Switch>\n        </Toolbar>\n      </AppBar>\n      <Container className={classes.container} maxWidth=\"md\">\n        <Switch>\n          <Route path=\"/scan\">\n            {<h1>Test</h1>}\n          </Route>\n          <Route path=\"/\">\n            <CreateView onPrint={this.handlePrintDone} onNewEntry={()=>this.setState({newEntry: false})} {...this.state}/>\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n    </Router>\n  );}\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}